{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport FormScreen from \"./screens/FormScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport LocutoresScreen from \"./screens/LocutoresScreen\";\nimport ContatoScreen from \"./screens/ContatoScreen\";\nimport InicioScreen from \"./screens/InicioScreen\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function Index() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var handleLogin = function handleLogin() {\n    setIsLoggedIn(true);\n  };\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Drawer.Navigator, {\n      initialRouteName: \"Inicio\",\n      useLegacyImplementation: true,\n      children: [_jsx(Drawer.Screen, {\n        name: \"Inicio\",\n        component: InicioScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Programa\\xE7\\xE3o\",\n        component: ProgramScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Locutores\",\n        component: LocutoresScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Contatos\",\n        component: ContatoScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Formulario\",\n        component: FormScreen\n      })]\n    }), _jsx(Drawer.Screen, {\n      name: \"LoginScreen\",\n      options: {\n        headerShown: false\n      },\n      children: function children(props) {\n        return _jsx(LoginScreen, _objectSpread(_objectSpread({}, props), {}, {\n          onLogin: handleLogin\n        }));\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","NavigationContainer","FormScreen","LoginScreen","LocutoresScreen","ContatoScreen","InicioScreen","createDrawerNavigator","jsx","_jsx","jsxs","_jsxs","Drawer","Index","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","handleLogin","children","Navigator","initialRouteName","useLegacyImplementation","Screen","name","component","ProgramScreen","options","headerShown","props","_objectSpread","onLogin"],"sources":["/home/senac/AlphaPI/src/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport FormScreen from './screens/FormScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport LocutoresScreen from './screens/LocutoresScreen';\nimport ContatoScreen from './screens/ContatoScreen';\nimport InicioScreen from './screens/InicioScreen';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\n\n\n\n\nconst Drawer = createDrawerNavigator();\n\n\nexport default function Index() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <NavigationContainer >\n      \n      <Drawer.Navigator  initialRouteName=\"Inicio\" useLegacyImplementation>\n        <Drawer.Screen name=\"Inicio\" component={InicioScreen} />\n        <Drawer.Screen name=\"Programação\" component={ProgramScreen} />\n        <Drawer.Screen name=\"Locutores\" component={LocutoresScreen} />\n        <Drawer.Screen name=\"Contatos\" component={ContatoScreen} />\n        <Drawer.Screen name=\"Formulario\" component={FormScreen} />\n        </Drawer.Navigator>        \n       \n        <Drawer.Screen name=\"LoginScreen\" options={{ headerShown: false }}>\n          {props => <LoginScreen {...props} onLogin={handleLogin} />}\n        </Drawer.Screen>\n     \n    </NavigationContainer>\n  );\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,SAASC,qBAAqB,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMjE,IAAMC,MAAM,GAAGL,qBAAqB,EAAE;AAGtC,eAAe,SAASM,KAAKA,CAAA,EAAG;EAC9B,IAAAC,SAAA,GAAoCd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,OACEP,KAAA,CAACV,mBAAmB;IAAAmB,QAAA,GAElBT,KAAA,CAACC,MAAM,CAACS,SAAS;MAAEC,gBAAgB,EAAC,QAAQ;MAACC,uBAAuB;MAAAH,QAAA,GAClEX,IAAA,CAACG,MAAM,CAACY,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEpB;MAAa,EAAG,EACxDG,IAAA,CAACG,MAAM,CAACY,MAAM;QAACC,IAAI,EAAC,mBAAa;QAACC,SAAS,EAAEC;MAAc,EAAG,EAC9DlB,IAAA,CAACG,MAAM,CAACY,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEtB;MAAgB,EAAG,EAC9DK,IAAA,CAACG,MAAM,CAACY,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAErB;MAAc,EAAG,EAC3DI,IAAA,CAACG,MAAM,CAACY,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAExB;MAAW,EAAG;IAAA,EACvC,EAEnBO,IAAA,CAACG,MAAM,CAACY,MAAM;MAACC,IAAI,EAAC,aAAa;MAACG,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAT,QAAA,EAC/D,SAAAA,SAAAU,KAAK;QAAA,OAAIrB,IAAA,CAACN,WAAW,EAAA4B,aAAA,CAAAA,aAAA,KAAKD,KAAK;UAAEE,OAAO,EAAEb;QAAY,GAAG;MAAA;IAAA,EAC5C;EAAA,EAEE;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}