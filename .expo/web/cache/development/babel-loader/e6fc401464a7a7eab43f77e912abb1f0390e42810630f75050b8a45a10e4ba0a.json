{"ast":null,"code":"import React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nfunction CustomDrawerContent(_ref) {\n  var state = _ref.state,\n    navigation = _ref.navigation;\n  var items = [{\n    label: 'Tela 1',\n    onPress: function onPress() {\n      return navigation.navigate('Tela1');\n    },\n    active: state.routeNames.includes('Tela1')\n  }, {\n    label: 'Tela 2',\n    onPress: function onPress() {\n      return navigation.navigate('Tela2');\n    },\n    active: state.routeNames.includes('Tela2')\n  }];\n  return _jsx(View, {\n    style: styles.drawerContent,\n    children: items.map(function (item, index) {\n      return _jsx(TouchableOpacity, {\n        style: item.active ? styles.drawerItemActive : styles.drawerItem,\n        onPress: item.onPress,\n        children: _jsx(Text, {\n          style: styles.drawerItemText,\n          children: item.label\n        })\n      }, index);\n    })\n  });\n}\nexport default function InicioScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(View, {\n    style: styles.container\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawerContent: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    paddingVertical: 20,\n    paddingHorizontal: 10\n  },\n  drawerItem: {\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  drawerItemActive: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: '#ddd'\n  },\n  drawerItemText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  }\n});","map":{"version":3,"names":["React","createDrawerNavigator","StyleSheet","View","Text","Image","TextInput","TouchableOpacity","jsx","_jsx","Drawer","CustomDrawerContent","_ref","state","navigation","items","label","onPress","navigate","active","routeNames","includes","style","styles","drawerContent","children","map","item","index","drawerItemActive","drawerItem","drawerItemText","InicioScreen","_ref2","container","create","flex","backgroundColor","paddingVertical","paddingHorizontal","fontSize","fontWeight","color"],"sources":["/home/senac/Alpha/src/screens/InicioScreen.jsx"],"sourcesContent":["import React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { StyleSheet, View, Text, Image, TextInput, TouchableOpacity } from 'react-native';\n\nconst Drawer = createDrawerNavigator();\n\nfunction CustomDrawerContent({ state, navigation }) {\n  const items = [\n    {\n      label: 'Tela 1',\n      onPress: () => navigation.navigate('Tela1'),\n      active: state.routeNames.includes('Tela1'),\n    },\n    {\n      label: 'Tela 2',\n      onPress: () => navigation.navigate('Tela2'),\n      active: state.routeNames.includes('Tela2'),\n    },\n    // adicione quantas telas quiser\n  ];\n\n  return (\n    <View style={styles.drawerContent}>\n      {items.map((item, index) => (\n        <TouchableOpacity key={index} style={item.active ? styles.drawerItemActive : styles.drawerItem} onPress={item.onPress}>\n          <Text style={styles.drawerItemText}>{item.label}</Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n}\n\nexport default function InicioScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      {/* coloque seu c√≥digo de tela aqui */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  drawerContent: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n  },\n  drawerItem: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n  },\n  drawerItemActive: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: '#ddd',\n  },\n  drawerItemText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n});\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,0BAA0B;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGjE,IAAMC,MAAM,GAAGT,qBAAqB,EAAE;AAEtC,SAASU,mBAAmBA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAC9C,IAAMC,KAAK,GAAG,CACZ;IACEC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMH,UAAU,CAACI,QAAQ,CAAC,OAAO,CAAC;IAAA;IAC3CC,MAAM,EAAEN,KAAK,CAACO,UAAU,CAACC,QAAQ,CAAC,OAAO;EAC3C,CAAC,EACD;IACEL,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMH,UAAU,CAACI,QAAQ,CAAC,OAAO,CAAC;IAAA;IAC3CC,MAAM,EAAEN,KAAK,CAACO,UAAU,CAACC,QAAQ,CAAC,OAAO;EAC3C,CAAC,CAEF;EAED,OACEZ,IAAA,CAACN,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAAC,QAAA,EAC/BV,KAAK,CAACW,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACrBnB,IAAA,CAACF,gBAAgB;QAAae,KAAK,EAAEK,IAAI,CAACR,MAAM,GAAGI,MAAM,CAACM,gBAAgB,GAAGN,MAAM,CAACO,UAAW;QAACb,OAAO,EAAEU,IAAI,CAACV,OAAQ;QAAAQ,QAAA,EACpHhB,IAAA,CAACL,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACQ,cAAe;UAAAN,QAAA,EAAEE,IAAI,CAACX;QAAK;MAAQ,GADlCY,KAAK,CAET;IAAA,CACpB;EAAC,EACG;AAEX;AAEA,eAAe,SAASI,YAAYA,CAAAC,KAAA,EAAiB;EAAA,IAAdnB,UAAU,GAAAmB,KAAA,CAAVnB,UAAU;EAC/C,OACEL,IAAA,CAACN,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACW;EAAU,EAEvB;AAEX;AAEA,IAAMX,MAAM,GAAGrB,UAAU,CAACiC,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE;EACR,CAAC;EACDZ,aAAa,EAAE;IACbY,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDT,UAAU,EAAE;IACVQ,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDV,gBAAgB,EAAE;IAChBS,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBF,eAAe,EAAE;EACnB,CAAC;EACDN,cAAc,EAAE;IACdS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}